#BlueJ class context
comment0.target=Location
comment0.text=\n\ Location\n\ Represents\ a\ position\ of\ something\ in\ a\ 2D\ space.\n\ There\ are\ a\ collection\ of\ methods\ for\n\ \ -\ getting\ the\ x\ and\ y\ coordinates\n\ \ -\ computing\ the\ distance\ to\ another\ Location\ or\ a\ (x,y)\ position\n\ \ -\ moving\ the\ location\ some\ distance\ towards\ a\ target,\ but\ constrained\ to\ be\ within\ a\ region.\n\ \ -\ moving\ the\ location\ some\ distance\ in\ a\ given\ direction,\ but\ constrained\ to\ be\ within\ a\ region.\n\ There\ are\ also\ (static)\ test\ methods\ for\ testing\ movement\ to\ a\ target\ and\ random\ movement\ constrained\ by\ a\ region.\n\ \ These\ may\ be\ helpful\ models\ for\ some\ components\ of\ your\ simulation.\n\ \n\ You\ are\ permitted\ to\ modify\ this\ class\ if\ you\ wish.\n\ You\ are\ not\ required\ to\ use\ this\ class.\n
comment1.params=x\ y
comment1.target=Location(double,\ double)
comment1.text=\n\ Construct\ new\ Location\ \n
comment10.params=distance\ direction\ boundary
comment10.target=void\ moveInDirection(double,\ double,\ Region)
comment10.text=\n\ Returns\ a\ new\ location\ that\ is\ the\ specified\ distance\ away\n\ \ from\ this\ location\ in\ the\ specified\ direction\n\ Directions\ are\ in\ degrees,\ clockwise\ from\ East\ \=\ 0;\ direction\ South\ \=\ 90\n\ The\ location\ cannot\ be\ moved\ outside\ the\ boundary\ if\ currently\ inside\n
comment11.params=distance\ dirInRadians\ boundary
comment11.target=void\ moveInDirectionRadians(double,\ double,\ Region)
comment11.text=\n\ Changes\ the\ location\ to\ be\ the\ specified\ distance\ \n\ in\ the\ specified\ direction.\n\ The\ location\ cannot\ be\ moved\ outside\ the\ boundary\ if\ currently\ inside\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\n\ toString\ for\ debugging\ purposes\n
comment13.params=
comment13.target=void\ testMoveInRandomSegments()
comment13.text=\n\ Static\ test\ method\ for\ testing\ movement\ of\ a\ location\ in\ a\ series\n\ of\ straight\ line\ segments.\n\ Gives\ quite\ good\ looking\ "random"\ motion\ in\ the\ region.\n\ User\ can\ change\ the\ location\ with\ the\ mouse\n
comment14.params=
comment14.target=void\ testMoveToTarget()
comment14.text=\n\ Static\ test\ method\ for\ testing\ movement\ of\ a\ location\ towards\ a\ target.\n
comment15.params=args
comment15.target=void\ main(java.lang.String[])
comment15.text=\n\ Main\ method\ for\ doing\ some\ testing.\n
comment2.params=boundary
comment2.target=Location(Region)
comment2.text=\n\ Construct\ new\ random\ Location\ within\ a\ region.\n\ -\ when\ making\ a\ new\ blob\n
comment3.params=xCord\ yCord
comment3.target=void\ setLocation(double,\ double)
comment4.params=
comment4.target=double\ getX()
comment5.params=
comment5.target=double\ getY()
comment6.params=other
comment6.target=double\ distanceTo(Location)
comment6.text=\n\ Returns\ the\ distance\ from\ this\ location\ to\ another.\n
comment7.params=targX\ targY
comment7.target=double\ distanceTo(double,\ double)
comment7.text=\n\ Returns\ the\ distance\ from\ this\ location\ to\ (targX,\ targY).\n
comment8.params=distance\ target\ boundary
comment8.target=void\ moveTowards(double,\ Location,\ Region)
comment8.text=\n\ Changes\ the\ location\ to\ be\ the\ specified\ distance\ from\n\ \ its\ current\ position\ towards\ a\ target\ location.\n\ If\ the\ target\ is\ closer\ to\ this\ location\ than\ the\ distance,\ \n\ \ then\ the\ location\ is\ only\ changed\ to\ the\ target.\n\ The\ location\ cannot\ be\ moved\ outside\ the\ boundary\ if\ currently\ inside\n
comment9.params=distance\ targX\ targY\ boundary
comment9.target=void\ moveTowards(double,\ double,\ double,\ Region)
numComments=16
